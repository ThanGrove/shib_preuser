<?php
/**
 * @file
 * A custom module that updates shibboleth tables when a user is pre-created.
 * 
 */
 
/**
 * Implements hook_user_insert
 * 
 */
 function shib_preuser_user_insert(&$edit, $account, $category) {

  $uid = $account->uid;
  $name = $account->name;
  
  /*
    INSERT INTO shib_authmap (uid, targeted_id)
      SELECT uid, name
      FROM users
      WHERE uid > 1 AND (uid) NOT IN
        (SELECT uid
        FROM shib_authmap);
  */
  $message = '';
  $mtype = 'status';
  if(db_table_exists('shib_authmap')) { 
    $shibauth = db_insert('shib_authmap')
      ->fields(array(
        'uid' => $uid,
        'targeted_id' => $name,
      ))
      ->execute();
    $message = $uid . ' added to Shibboleth shib_authmap table';
    drupal_set_message(check_plain($message), 'status');
  } else {
    $message = 'The table shib_authmap does not exist! Check if Shibboleth module is installed.';
    drupal_set_message(check_plain($message), 'error');
  }

  /*
INSERT INTO authmap (uid, authname)
  SELECT uid, targeted_id
  FROM shib_authmap
  WHERE (uid) NOT IN
    (SELECT uid
    FROM authmap);
 */
    
  if(db_table_exists('authmap')) {
    $authmap = db_insert('authmap')
      ->fields(array(
        'uid' => $uid,
        'authname' => $name,
      ))
      ->execute();
          
     /*
    UPDATE authmap SET module = 'shib_auth'
    WHERE (uid) IN
      (SELECT uid
      FROM shib_authmap);
       */
      $authupdate = db_update('authmap')
        ->fields(array(
          'module' => 'shib_auth',
        ))
        ->condition('uid', $uid, '=')
        ->execute();
      $message .=  $uid . ' added to Shibboleth shib_authmap table';
      drupal_set_message(check_plain($message), 'status');
    } else {
      $message .= '<br/> The authmap table does not exist. Check if Shibbolleth module is properly installed';
      drupal_set_message(check_plain($message), 'error');
    }
 }
